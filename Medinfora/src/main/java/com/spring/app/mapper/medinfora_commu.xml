<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.commu.model.CommuDAO">
	<!-- 시퀀스 채번 -->
	<select id="getSeqCommu" resultType="String">
		SELECT cidx as seq
		  FROM (
		         SELECT cidx, row_number() over(order by writeday desc) AS rno
		           FROM commu
		       )
		 WHERE rno = 1
	</select>
	
	<!-- 글 등록 -->
	<insert id="add" parameterType="CommuBoardDTO">
		insert into commu(cidx, userid, category, title, content, writeday, updateday, commentcount)
		values(seq_cidx.nextval, #{userid}, #{category}, #{title}, #{content}, default, default, default)
	</insert>
	
	<!-- 파일 등록 -->
	<insert id="add_File" parameterType="CommuFilesDTO">
		insert into commufiles(cidx, filename, orgname, filesize)
		values(#{cidx}, #{fileName}, #{orgname}, #{fileSize})
	</insert>

	<!-- 게시글 select (커뮤 게시판 리스트 뷰잉) -->
	<select id="getCommuBoardList" parameterType="HashMap" resultType="CommuBoardDTO">
	    select * from (
	        select cidx, category, title, commentcount, userid, content, suggestioncnt,
	               to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy/mm/dd') as writeday, 
	               viewcnt, ROW_NUMBER() OVER (
	               <choose>
	                   <when test='sort == "comment"'>
	                       order by commentcount desc
	                   </when>
	                   <when test='sort == "suggestion"'>
	                       order by suggestioncnt desc
	                   </when>
	                   <when test='sort == "views"'>
	                       order by viewcnt desc
	                   </when>
	                   <otherwise>
	                       order by writeday desc
	                   </otherwise>
	               </choose>
	               ) AS rno
	        from commu
	        where 1=1
	        <if test='category != "0"'> 
	            and category = #{category}
	        </if>
	        <if test='type == "z" and category == "0"'> 
	            and (lower(title) like '%'||lower(#{word})||'%' or lower(content) like '%'||lower(#{word})||'%' or lower(userid) like '%'||lower(#{word})||'%' )
	        </if> 
	        <if test='type != "z"'> 
	            <if test='type == "title" and word != ""'>
	                and ( lower(title) like '%'||lower(#{word})||'%' )
	            </if>
	            <if test='type == "content" and word != ""'>
	                and ( lower(content) like '%'||lower(#{word})||'%' )
	            </if>
	            <if test='type == "userid" and word != ""'>
	                and ( lower(userid) like '%'||lower(#{word})||'%' )
	            </if>
	        </if>
	    )
	    WHERE rno BETWEEN #{startRno} AND #{endRno}
	</select>

	
	<!-- 첨부파일 유무 시퀀스  -->
	<select id="getfileSeqList" resultType="String">
		select distinct(A.cidx) 
		from commu A JOIN commufiles B
		ON A.cidx = B.cidx
	</select>
	
	<!-- 커뮤 게시판 페이지네이션 관련 전체갯수  -->
	<select id="getCBListTotalCount" parameterType="HashMap" resultType="int">
	    SELECT count(*)
        FROM (
		select cidx
		from commu
		where 1=1
		<if test='category != "0"'> 
		    and category = #{category}
		</if>
		<if test='type == "z" and category == "0"'> 
			and (lower(title) like '%'||lower(#{word})||'%' or lower(content) like '%'||lower(#{word})||'%'  or lower(userid) like '%'||lower(#{word})||'%' )
		</if> 
		<if test='type != "z"'> 
		    <if test='type == "title" and word != ""'>
		        and ( lower(title) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "content" and word != ""'>
		        and ( lower(content) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "userid" and word != ""'>
		        and ( lower(userid) like '%'||lower(#{word})||'%' )
		    </if>
		</if>
		GROUP BY cidx)
	</select>
	
	<!-- 게시글 상세  -->
	<select id="getCommuDetail" parameterType="String" resultType="CommuBoardDTO" >
		select *
		from (select A.cidx,category, title, commentcount, A.userid, content,
		             to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh24:mi')  as writeday,
		             to_char(to_date(updateday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh24:mi') as updateday,
		             viewcnt, suggestioncnt, bidx,
		             ROW_NUMBER() OVER (ORDER BY bidx DESC) AS rno
		      from commu A left join BOOKMARK B ON A.CIDX = B.CIDX
		      where A.cidx = #{cidx}
		)
		where rno = 1		
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="viewCntIncrease" parameterType="String">
		update commu set viewcnt = viewcnt + 1
		where cidx = #{cidx}
	</update>
		
	<!-- 게시글 1개당 첨부파일 리스트 -->		
	<select id="getAttachfiles" parameterType="String" resultType="CommuFilesDTO">
		select filename, orgname, filesize
		from commufiles
		where cidx = #{cidx}
	</select>
	
	<!-- 글 수정하기 -->
	<update id="edit" parameterType="CommuBoardDTO" >
		update commu set category = #{category}, title = #{title}, content = #{content}, updateday = default
		where cidx = #{cidx}
	</update>
	
	<!-- 특정 첨부파일 삭제하기 -->
	<delete id="fileDel" parameterType="String">
		delete from commufiles
		 where cidx = #{cidx} and filename = #{fileName}
	</delete>
	
	<!-- 모든 첨부파일 삭제하기 -->
	<delete id="fileDelAll" parameterType="String">
		 delete from commufiles
		 where cidx = #{cidx}
	</delete>
	
	<!-- 글 삭제하기 -->
	<delete id="del" parameterType="String">
		 delete from commu
		 where cidx = #{cidx}
	</delete>

	<!-- 댓글 쓰기 -->
	<insert id="addComment" parameterType="CommuCommentDTO">
		<!-- 댓글 쓰기인 경우 -->	
		<if test='fk_cmidx.equals("")'>
			insert into commucomment(cmidx, cidx, userid, content, writeday, updateday, groupno, fk_userid, fk_cmidx, depthno)
			values(seq_cmidx.nextval, #{cidx}, #{userid}, #{content}, default, default, #{groupno}, #{fk_userid}, default, default)
		</if>
		<!-- 답글쓰기인경우 -->
		<if test='!fk_cmidx.equals("")'>
			insert into commucomment(cmidx, cidx, userid, content, writeday, updateday, groupno, fk_userid, fk_cmidx, depthno)
			values(seq_cmidx.nextval, #{cidx}, #{userid}, #{content}, default, default, #{groupno}, #{fk_userid}, #{fk_cmidx},
            <choose>
                <when test="depthno &lt;= 1">
                    #{depthno} + 1
                </when>
                <otherwise>
                    2
                </otherwise>
            </choose>
			)
		</if>
	</insert>
	
	<!-- commentCount 컬럼 1증가(update) -->
	<update id="updateCommentCount" parameterType="String">
		update commu set commentcount = commentcount + 1
		where cidx = #{cidx}
	</update>
	
	<!-- 커뮤댓글의 그룹넘버 알아오기 -->
	<select id="getGroupnoMax" resultType="int">
		select nvl(max(groupno), 0)
		from COMMUCOMMENT
	</select>

	<!-- 댓글 조회 -->
	<select id="getCommentList" parameterType="HashMap" resultType="CommuCommentDTO">
		SELECT CMIDX, USERID, content, WRITEDAY, updateday, GROUPNO, DEPTHNO, FK_CMIDX, FK_USERID
		FROM (
		    SELECT CMIDX, USERID, content, WRITEDAY, updateday, GROUPNO, DEPTHNO, FK_CMIDX, FK_USERID,
		           ROW_NUMBER() OVER (ORDER BY groupno ASC, CMIDX ASC) AS rno
		    FROM (
		        SELECT CMIDX, USERID, content,
		               to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh24:mi') AS WRITEDAY,
		               to_char(to_date(updateday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh24:mi') AS updateday,
		               GROUPNO, DEPTHNO, FK_CMIDX, FK_USERID
		        FROM COMMUCOMMENT
		        WHERE CIDX = #{cidx}
		        START WITH FK_CMIDX = 0
		        CONNECT BY PRIOR CMIDX = FK_CMIDX
		        ORDER SIBLINGS BY CMIDX asc
		    )
		)
		WHERE rno BETWEEN #{startRno} AND #{endRno}
	</select>
	
	<!-- 댓글 전체갯수 조회(페이징처리용) -->
	<select id="getCommentTotalCount" parameterType="String" resultType="int">
		select count(*)
		from COMMUCOMMENT
		where cidx = #{cidx}
	</select>
	
	<!-- 댓글 수정 -->
	<update id="updateComment" parameterType="CommuCommentDTO">
		update commucomment set content = #{content}, updateday = default
		where cmidx = #{cmidx}
	</update>
	
	<!-- 댓글 삭제 -->
	<update id="deleteComment" parameterType="String">
		update commucomment set content = '해당 댓글은 삭제되었습니다.'
		where cmidx = #{cmidx}
	</update>
	
	<!-- 글 추천 -->
	<insert id="suggestionPost" parameterType="SuggestionDTO">
		insert into suggestion(cidx, userid)
		values(#{cidx}, #{userid})
	</insert>
	
	<!-- 추천된 글 있는지 보기 -->
	<select id="checkSuggestion" parameterType="SuggestionDTO" resultType="int">
		select count(*)
		from SUGGESTION
		where USERID = #{userid} and CIDX = #{cidx}
	</select>
	
	<!-- 글 추천시 커뮤 게시판 추천 1증가 -->
	<update id="postSuggestionUpdate" parameterType="SuggestionDTO">
		update commu set suggestioncnt = suggestioncnt + 1
		where cidx = #{cidx}
	</update>

	<!-- 이미 북마크된게 있는지 조회 -->
	<select id="alreadyMarking" parameterType="BookmarkDTO" resultType="int">
		select count(*)
		from BOOKMARK
		where USERID = #{userid} and CIDX = #{cidx}
	</select>

	<!-- 북마크 테이블에 삽입 -->
	<insert id="bookmarkPost" parameterType="BookmarkDTO">
		insert into BOOKMARK(bidx, cidx, userid)
		values(seq_bidx.nextval, #{cidx}, #{userid})
	</insert>
	
	<!-- 북마크 해제 -->
	<delete id="delBookMark" parameterType="BookmarkDTO" >
		delete from BOOKMARK
		where USERID = #{userid} and CIDX = #{cidx}
	</delete>
	
	<!-- 댓글위치 -->
	<select id="getCommentPage" parameterType="CommuCommentDTO" resultType="int">
		SELECT rno
		FROM (
		    SELECT CMIDX,
		           ROW_NUMBER() OVER (ORDER BY groupno ASC, CMIDX ASC) AS rno
		    FROM (
		        SELECT CMIDX, GROUPNO, DEPTHNO, FK_CMIDX
		        FROM COMMUCOMMENT
		        WHERE CIDX = #{cidx}
		        START WITH FK_CMIDX = 0
		        CONNECT BY PRIOR CMIDX = FK_CMIDX
		        ORDER SIBLINGS BY CMIDX ASC
		    )
		)
		WHERE CMIDX = #{cmidx}
	</select>
</mapper>